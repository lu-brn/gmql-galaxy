<macros>
    <xml name="input_ds" token_label="@LABEL@">
        <param name="input_ds" type="select" label="@LABEL@">
            <options from_dataset="gmql_datasets">
                <column name="value" index="0"/>
            </options>
        </param>
    </xml>
    <xml name="output_var">
        <param name="output_var" type="text" label="Output Variable Name" >
            <expand macro="text_val" />
        </param>
    </xml>
    <xml name="input_var" token_name="@NAME@" token_label="@LABEL@" token_optional="@OPTIONAL@">
        <param name="@NAME@" label="@LABEL@" optional="@OPTIONAL@" type="text" help="Must be a dataset variable already defined as output of a previous operation.">
            <expand macro="text_val" />
        </param>
    </xml>
    <xml name="materialize_stm" >
        <conditional name="m_stm">
            <param name="materialize_stm" type="boolean" label="Materialize the result?" help="This may be helpful to check intermediate datasets" />
            <when value="true">
                    <expand macro="output-filename" />
            </when>
        </conditional>
    </xml>
    <xml name="output-filename">
        <param name="file_name" type="text" label="Name of the file into which the dataset DS will be saved"
               help="The actual GMQL implementation materializes DS into a file with a name in the form [queryname]_[timestamp]_filename">
            <expand macro="text_val"/>
        </param>
    </xml>
    <xml name="block_logCon" >
        <section name="block_logCon" title="Logical concatenation between blocks" expanded="true"
                 help="The following logical connectors applies to the WHOLE following block.">
            <expand macro="logCon" />
            <param name="negate" type="boolean" label="Negative Condition"  />
        </section>
    </xml>
    <xml name="logCon">
        <param name="logCon" type="select" label="Logical Operator">
            <option value="AND">AND</option>
            <option value="OR">OR</option>
        </param>
    </xml>
    <xml name="metajoin_attribute" token_name="@NAME@" token_optional="@OPTIONAL@">
        <param name="@NAME@" type="text" label="Attribute Name" optional="@OPTIONAL@">
            <validator type="regex" message="Invalid attribute name.">[\w]+(.[\w]+)?$</validator>
            <option value="attribute_name">attribute_name</option>
            <option value="DS.attribute_name">DS.attribute_name</option>
            <option value="DS.attribute_name">Prefix.DS.attribute_name</option>
        </param>
        <yield />
    </xml>
    <xml name="metajoin_options">
        <param type="select" label="Matching Options" name="metajoin_match">
            <option value="SIMPLE">Match all attributes that are equal to OR end with the dot-separated suffix specified name</option>
            <option value="EXACT">Match all attributes that are equal to the specified name (without any prefixes)</option>
            <option value="FULL">Match two attributes if they end with the specified name AND their full names are equal</option>
        </param>
    </xml>
    <xml name="aggrFuncs" token_help="@HELP@" token_optional="@OPTIONAL@">
        <yield />
        <param name="function" type="select" label="Aggregate Function to apply" optional="@OPTIONAL@"
                    help="@HELP@">
                    <option value="SUM">Sum Values</option>
                    <option value="AVG">Average Value</option>
                    <option value="MIN">Minimum Value</option>
                    <option value="MAX">Maximum Value</option>
                    <option value="STD">Standard Deviation</option>
                    <option value="BAG">Create comma separated string of attributes values</option>
                    <option value="BAGD">Create comma separated list of distinct attributes values</option>
                </param>
    </xml>
    <xml name="text_val">
        <validator type="regex" message="Only alphanumeric characters and underscore allowed.">[\w]+$</validator>
    </xml>
</macros>